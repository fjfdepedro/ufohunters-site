<html>
<head>
    <title>OpenLayers Demo</title>
    <style type="text/css">
      html, body, #basicMap {
          width: 900px;
          height: 500px;
          margin: 20;
      }
    </style>
   <script src="http://www.openlayers.org/api/OpenLayers.js"></script>
   <script>
    
    var iconSize = new OpenLayers.Size(21, 25);
    var iconOffset = new OpenLayers.Pixel(-(iconSize.w / 2), -iconSize.h);
    var icon = new OpenLayers.Icon("http://www.openstreetmap.org/openlayers/img/marker.png",
                   iconSize, iconOffset);
    var zoom, center, currentPopup, map, lyrMarkers;
    var popupClass = OpenLayers.Class(OpenLayers.Popup.FramedCloud, {
        "autoSize": true,
        "minSize": new OpenLayers.Size(300, 50),
        "maxSize": new OpenLayers.Size(500, 300),
        "keepInMap": true
    });
    var bounds = new OpenLayers.Bounds();

    function addMarker(lng, lat, info) {
        var pt = new OpenLayers.LonLat(lng, lat).transform(new OpenLayers.Projection("EPSG:4326"),map.getProjectionObject());
        bounds.extend(pt);
        var feature = new OpenLayers.Feature(lyrMarkers, pt);
        feature.closeBox = true;
        feature.popupClass = popupClass;
        feature.data.popupContentHTML = info;
        feature.data.overflow = "auto";
        var marker = new OpenLayers.Marker(pt, icon.clone());
        var markerClick = function(evt) {
            if (currentPopup != null && currentPopup.visible()) {
                currentPopup.hide();
            }
            if (this.popup == null) {
                this.popup = this.createPopup(this.closeBox);
                map.addPopup(this.popup);
                this.popup.show();
            } else {
                this.popup.toggle();
            }
            currentPopup = this.popup;
            OpenLayers.Event.stop(evt);
        };
        marker.events.register("mousedown", feature, markerClick);
        lyrMarkers.addMarker(marker);
    }
    function init() {
        
		    var lat            = 40.5361528074896;
		    var lon            = -3.6291320200;
		    var zoom           = 1;
		 
		    var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
		    var toProjection   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
		
		
		    var position = new OpenLayers.Bounds()//      = new OpenLayers.LonLat(lon, lat).transform( fromProjection, toProjection);
		 
		    map = new OpenLayers.Map("basicMap");
		    var mapnik = new OpenLayers.Layer.OSM();
		    map.addLayer(mapnik);
		 
		    var markers = new OpenLayers.Layer.Markers( "Markers" );
		    map.addLayer(markers);
		    markers.addMarker(new OpenLayers.Marker(position)); 
                    
		    lyrMarkers = new OpenLayers.Layer.Markers("Markers");
                    map.addLayer(lyrMarkers);
		    
                    <% @listaUFO.each do |ovni| %>			  
  			 addMarker(<%=ovni.coord.fetch("lon")%>,<%=ovni.coord.fetch("lat")%>,'Localizacion: <%=ovni.location%></br>Fecha avistamiendo: <%=ovni.sighted_at%>');
		    <% end %>
		    
                    
		    map.setCenter(position, zoom);
		    map.zoomToMaxExtent();

      }
    </script>
  </head>

<body onload="init();">

<h1>Sightings#index</h1>
<p>Find me in app/views/sightings/index.html.erb</p>
<div id="basicMap"></div>

<p>Numero de avistamientos: <%=@numUFO%></p>

<% @listaUFO.each do |ovni| %>
  
  <p>Fecha avistamiendo: <%=ovni.sighted_at%></br>
     Fecha en la que se reporto: <%=ovni.reported_at%></br>
	 Localizacion: <%=ovni.location%></br>
	 Forma: <%=ovni.shape%></br>
	 Duration: <%=ovni.duration%></br>
	 Description: <%=ovni.description%></br>
	 <% ovni.coord.each do |k,y| %>
     		<%= k %>: <%= y %></br>
         <% end %>         
  </p>
<% end %>





</body>
</html>
